#pragma once

#ifndef __INCLUDE_CINFINITY_CONFIG_HPP__
#define __INCLUDE_CINFINITY_CONFIG_HPP__

#define CINF_VERSION_MAJOR @CInfinity_VERSION_MAJOR@
#define CINF_VERSION_MINOR @CInfinity_VERSION_MINOR@
#define CINF_VERSION_PATCH @CInfinity_VERSION_PATCH@
#define CINF_VERSION_TWEAK @CInfinity_VERSION_TWEAK@
#define CINF_FULL_VERSION "@PROJECT_VERSION_FULL@"

#include <array>
#include <atomic>
#include <bit>
#include <cstdint>
#include <limits>
#include <memory>
#include <mutex>
#include <random>
#include <string>
#include <thread>
#include <vector>
#include <queue>

#include <ankerl/unordered_dense.h>
#include "chess.hpp"
#include "onnxruntime_cxx_api.h"

#if defined(_WIN32) && defined(_GLFW_BUILD_DLL)
    /* We are building GLFW as a Win32 DLL */
    #define CINF_API __declspec(dllexport)
#elif defined(_WIN32) && defined(GLFW_DLL)
    /* We are calling a GLFW Win32 DLL */
    #define CINF_API __declspec(dllimport)
#elif defined(__GNUC__) && defined(_GLFW_BUILD_DLL)
    /* We are building GLFW as a Unix shared library */
    #define CINF_API __attribute__((visibility("default")))
#else
    #define CINF_API
#endif

namespace hashing = ankerl::unordered_dense;

#endif // __INCLUDE_CINFINITY_CONFIG_HPP__